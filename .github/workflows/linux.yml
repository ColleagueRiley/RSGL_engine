name: Linux

on:
  workflow_dispatch:
  push:
    paths:
      - '**'
      - 'examples/**'
      - '.github/workflows/linux.yml'
  pull_request:
    paths:
      - '**'
      - 'examples/**'
      - '.github/workflows/linux.yml'
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write  # for actions/upload-release-asset to upload release asset
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        bits: [64]
        include:
        - bits: 64
          ARCH: "x86_64"
          ARCH_NAME: "amd64"
          COMPILER_PATH: "/user/bin"
          
    env:
      RELEASE_NAME: RSGL_engine-dev_linux_${{ matrix.ARCH_NAME }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    
    - name: Setup Release Version
      run: |
        echo "RELEASE_NAME=RSGL_engine-${{ github.event.release.tag_name }}_linux_${{ matrix.ARCH_NAME }}" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'
      
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install gcc-multilib
        sudo apt-get install -y --no-install-recommends libx11-dev mesa-common-dev libglx-dev libxcursor-dev mesa-vulkan-drivers libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev
        mkdir build
        cd build
        mkdir ${{ env.RELEASE_NAME }}
        cd ${{ env.RELEASE_NAME }}
        mkdir bin
        cd ../../../RSGL_engine
        # ${{ matrix.ARCH }}-linux-gnu-gcc -v
    
    - name: Build 
      run: |
        make
        make release_example
      if: matrix.bits == 64
    
    - name: Generate Artifacts
      run: |
        cp -v ./RSGL_engine ./build/${{ env.RELEASE_NAME }}/bin
        cp -v -r ./release ./build/${{ env.RELEASE_NAME }}
        tar -czvf ${{ env.RELEASE_NAME }}.tar.gz ${{ env.RELEASE_NAME }}/bin
        tar -czvf ${{ env.RELEASE_NAME }}-example.tar.gz ${{ env.RELEASE_NAME }}/release
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_NAME }}.tar.gz  ${{ env.RELEASE_NAME }}-example.tar.gz
        path: ./build/${{ env.RELEASE_NAME }}.tar.gz ./build/${{ env.RELEASE_NAME }}-example.tar.gz
        
    - name: Upload Artifact to Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./build/${{ env.RELEASE_NAME }}.tar.gz ./build/${{ env.RELEASE_NAME }}-example.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'published'
